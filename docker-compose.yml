version: '3.8'

services:
  app:
    build: .
    container_name: ai-music-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/ai_music
      - CONSUL_HOST=consul
      - IPFS_HOST=ipfs
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - consul
      - ipfs
    networks:
      - ai-music-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:4.4
    container_name: ai-music-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ai-music-network
    restart: unless-stopped
    command: ["--bind_ip_all"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  consul:
    image: hashicorp/consul:latest
    container_name: ai-music-consul
    ports:
      - "8500:8500"
    volumes:
      - consul_data:/consul/data
    networks:
      - ai-music-network
    command: agent -dev -client=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3

  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: ai-music-ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_export:/export
    networks:
      - ai-music-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ipfs", "id"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ai-music-network:
    driver: bridge

volumes:
  mongodb_data:
  consul_data:
  ipfs_data:
  ipfs_export:
